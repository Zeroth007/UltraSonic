<Window x:Class="UltraSonic.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:UltraSonic" Icon="Images/ultrasonic-logo.ico" Title="UltraSonic" Height="700" Width="1030" MinWidth="1030" MinHeight="700" Closed="WindowClosed">
    <Window.Resources>
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false"/>
                                            <Setter Property="FrameworkElement.Width" Value="16"/>
                                            <Setter Property="FrameworkElement.Height" Value="16"/>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z"/>
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA"/>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF"/>
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959"/>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleCustomCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="imageCheckBox" Source="Images/star-active2.png" Width="20" Height="20"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="imageCheckBox" Property="Source" Value="Images/star-inactive.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FlashingHeader" TargetType="TabItem">
            <Setter Property="TabItem.HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <!--Make The Header -->
                        <TextBlock x:Name="header" Foreground ="Black" Text="{Binding}"/>
                        <!--Make The Background Flash-->
                        <DataTemplate.Triggers>
                            <Trigger Property="Visibility" Value="Visible">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="header" AutoReverse="True" RepeatBehavior="Forever" Storyboard.TargetProperty="Foreground.Color">
                                            <ColorAnimation To="Transparent" AutoReverse="True" Duration="0:0:.75" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ChatMessageUserCellTemplate">
            <TextBlock FontWeight="Bold" Foreground="Black" TextAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}&lt;{0}&gt;">
                        <Binding Path="User"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="ChatMessageTimeStampCellTemplate">
            <TextBlock Foreground="Black" TextAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}[{0}]">
                        <Binding Path="TimeStamp"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="ChatMessageCellTemplate">
            <TextBlock FontWeight="Normal" Foreground="Black" TextAlignment="Left" Text="{Binding Path=Message}" Width="Auto"/>
        </DataTemplate>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="MediaCommands.Play" Executed="PlayButtonClick" CanExecute="CommandCanExecute"/>
        <CommandBinding Command="MediaCommands.Stop" Executed="StopButtonClick" CanExecute="CommandCanExecute"/>
        <CommandBinding Command="MediaCommands.Pause" Executed="PauseButtonClick" CanExecute="CommandCanExecute"/>
        <CommandBinding Command="MediaCommands.PreviousTrack" Executed="PreviousButtonClick" CanExecute="PreviousCanExecute"/>
        <CommandBinding Command="MediaCommands.NextTrack" Executed="NextButtonClick" CanExecute="NextCanExecute"/>
    </Window.CommandBindings>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo>
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo Description="Previous" DismissWhenClicked="False" Command="MediaCommands.PreviousTrack" CommandTarget="{Binding ElementName=PreviousButton}" ImageSource="Images/media-skip-backward-dark-16.png"/>
                    <ThumbButtonInfo Description="Play" DismissWhenClicked="False" Command="MediaCommands.Play" CommandTarget="{Binding ElementName=PlayButton}" ImageSource="Images/media-playback-start-dark-16.png"/>
                    <ThumbButtonInfo Description="Pause" DismissWhenClicked="False" Command="MediaCommands.Pause" CommandTarget="{Binding ElementName=PauseButton}" ImageSource="Images/media-playback-pause-dark-16.png"/>
                    <ThumbButtonInfo Description="Stop" DismissWhenClicked="False" Command="MediaCommands.Stop" CommandTarget="{Binding ElementName=StopButton}" ImageSource="Images/media-playback-stop-dark-16.png"/>
                    <ThumbButtonInfo Description="Next" DismissWhenClicked="False" Command="MediaCommands.NextTrack" CommandTarget="{Binding ElementName=NextButton}" ImageSource="Images/media-skip-forward-dark-16.png"/>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <StatusBar VerticalAlignment="Bottom" Height="29" Grid.ColumnSpan="3">
            <StatusBarItem x:Name="MusicTimeRemainingLabel" Width="100" FontSize="10"/>
            <StatusBarItem x:Name="MusicPlayStatusLabel" Width="100" FontSize="10"/>
            <StatusBarItem x:Name="SearchStatusLabel" Width="100" FontSize="10"/>
            <StatusBarItem x:Name="DownloadStatusLabel" Width="100" FontSize="10"/>
        </StatusBar>
        <TabControl Margin="10,5,10,108" Grid.ColumnSpan="3">
            <TabItem Header="Music" x:Name="MusicTab">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TreeView x:Name="MusicTreeView" ItemsSource="{Binding}" DataContext="{Binding local:MainWindow.ArtistItems}" SelectedItemChanged="MusicTreeViewSelectedItemChanged" UseLayoutRounding="True" VerticalContentAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.RowSpan="3">
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="ArtistRefresh" Header="Refresh" Click="ArtistRefreshClick"/>
                                <MenuItem x:Name="ExpandAllArtists" Header="Expand All" Click="ExpandAllArtistsClick"/>
                                <MenuItem x:Name="CollapseAllArtists" Header="Collapse All" Click="CollapseAllArtistsClick"/>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type local:ArtistItem}" ItemsSource="{Binding Path=Children}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    <DataGrid x:Name="MusicDataGrid" GridLinesVisibility="None" MouseLeftButtonUp="MusicDataGridSelectionChanged" MouseDoubleClick="MusicDataGridMouseDoubleClick" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" RowBackground="White" Background="White" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="1">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="MusicDataGridAdd" Header="Add To Playlist" Click="MusicDataGridAddClick"/>
                                <MenuItem x:Name="MusicDataGridDownload" Header="Download" Click="MusicDataGridDownloadClick"/>
                                <MenuItem x:Name="MusicDataGridRandom" Header="Random" Click="MusicDataGridAlbumListClick"/>
                                <MenuItem x:Name="MusicDataGridNewest" Header="Newest" Click="MusicDataGridAlbumListClick"/>
                                <MenuItem x:Name="MusicDataGridHighest" Header="Highest Rated" Click="MusicDataGridAlbumListClick"/>
                                <MenuItem x:Name="MusicDataGridFrequent" Header="Frequently Played" Click="MusicDataGridAlbumListClick"/>
                                <MenuItem x:Name="MusicDataGridRecent" Header="Recently Played" Click="MusicDataGridAlbumListClick"/>
                                <MenuItem x:Name="MusicDataGridStarred" Header="Starred" Click="MusicDataGridAlbumListClick"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="MusicDataGridStarredColumn">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Style="{StaticResource styleCustomCheckBox}" x:Name="MusicDataGridStarredCheckbox" IsThreeState="False" IsChecked="{Binding Path=Starred, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="MusicDataGridStarredCheckBoxClick"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Cover Art">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Image}" Height="150" Width="150"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding Artist}" Header="Artist" IsReadOnly="True" Width="*"/>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Album" IsReadOnly="True" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid x:Name="TrackDataGrid" GridLinesVisibility="None" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" RowBackground="White" Background="White" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" MouseDoubleClick="TrackDataGridMouseDoubleClick" SelectionMode="Extended" LoadingRow="DataGridLoadingRow" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="1">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="TrackDataGridAdd" Header="Add To Playlist" Click="TrackDataGridAddClick"/>
                                <MenuItem x:Name="TrackDataGridDownload" Header="Download" Click="TrackDataGridDownloadClick"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="TrackDataGridStarred">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Style="{StaticResource styleCustomCheckBox}" x:Name="StarredCheckbox" IsThreeState="False" IsChecked="{Binding Path=Starred, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="StarredCheckBoxClick"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding DiscNumber}" Header="Disc" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding TrackNumber}" Header="Title" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Artist}" Header="Artist" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Title}" Header="Title" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Album}" Header="Album" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Genre}" Header="Genre" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Year}" Header="Year" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Duration}" Header="Duration" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding BitRate}" Header="BitRate" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!-- Drag and Drop Popup -->
                    <Popup x:Name="playlistDragPopup" IsHitTestVisible="False" Placement="RelativePoint" PlacementTarget="{Binding ElementName=me}" AllowsTransparency="True">
                        <Border BorderBrush="LightSteelBlue" BorderThickness="2" Background="White" Opacity="0.75">
                            <StackPanel Orientation="Horizontal" Margin="4,3,8,3">
                                <Image Source="/Images/view-sort.png" Width="24" Height="24"/>
                                <TextBlock FontSize="14" FontWeight="Bold" VerticalAlignment="Center" Text="{Binding ElementName=me, Path=DraggedItem.Name}" Margin="8,0,0,0"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                </Grid>
            </TabItem>
            <TabItem Header="Playlists" x:Name="PlaylistTab">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="PlaylistsDataGrid" GridLinesVisibility="None" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" RowBackground="White" Background="White" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" MouseDoubleClick="PlaylistsDataGridSelectionChanged" LoadingRow="DataGridLoadingRow" Grid.Column="0">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="PlaylistsGridDeletePlaylist" Header="Delete Playlist" Click="PlaylistsDataGridDeletePlaylistClick"/>
                                <MenuItem x:Name="PlaylistsGridRefresh" Header="Refresh" Click="PlaylistsDataGridRefreshClick"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Name" IsReadOnly="True" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding Tracks}" Header="Titles" IsReadOnly="True" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding Duration}" Header="Duration" IsReadOnly="True" Width="auto"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid x:Name="PlaylistTrackGrid" SelectionMode="Single" GridLinesVisibility="None" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="True" RowBackground="White" Background="White" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" LoadingRow="DataGridLoadingRow" MouseDoubleClick="PlaylistTrackGridMouseDoubleClick" ItemsSource="{Binding}" Grid.Column="1" Grid.ColumnSpan="2" PreviewKeyDown="PreviewKeyDownHandler">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="PlaylistTrackGridDownload" Header="Download" Click="PlaylistTrackGridDownloadClick"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="PlaylistGridStarred">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Style="{StaticResource styleCustomCheckBox}" x:Name="StarredCheckbox" IsThreeState="False" IsChecked="{Binding Path=Starred, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="PlaylistStarredCheckBoxClick"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding DiscNumber}" Header="Disc" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding TrackNumber}" Header="Title" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Artist}" Header="Artist" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Title}" Header="Title" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Album}" Header="Album" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Genre}" Header="Genre" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Year}" Header="Year" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Duration}" Header="Duration" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding BitRate}" Header="BitRate" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem x:Name="SocialTab" Header="Social" GotFocus="SocialTabGotFocus">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="497*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="NowPlayingDataGrid" Grid.Column="0" GridLinesVisibility="None" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" RowBackground="White" Background="White" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" Grid.RowSpan="2" MouseDoubleClick="NowPlayingDataGridMouseDoubleClick">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="NowPlayingRefresh" Header="Refresh" Click="NowPlayingRefreshClick"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="NowPlayingGridStarredColumn">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Style="{StaticResource styleCustomCheckBox}" x:Name="NowPlayingGridStarredCheckbox" IsThreeState="False" IsChecked="{Binding Path=Starred, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="NowPlayingGridStarredCheckBoxClick"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Cover Art">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Image}" Height="150" Width="150"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding User}" Header="User" IsReadOnly="True" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding Artist}" Header="Artist" IsReadOnly="True" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding Title}" Header="Title" IsReadOnly="True" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding Album}" Header="Album" IsReadOnly="True" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding When}" Header="When" IsReadOnly="True" Width="auto"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <ListView x:Name="ChatListView" Grid.Column="1">
                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </ListView.Resources>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="ChatListRefresh" Header="Refresh" Click="ChatListRefreshClick"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn CellTemplate="{StaticResource ChatMessageTimeStampCellTemplate}"/>
                                <GridViewColumn CellTemplate="{StaticResource ChatMessageUserCellTemplate}"/>                                
                                <GridViewColumn CellTemplate="{StaticResource ChatMessageCellTemplate}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <TextBox x:Name="ChatListInput" Grid.Column="1" Grid.Row="1" KeyDown="ChatListTextBoxKeyDown"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="SettingsTab" Header="Settings">
                <Grid>
                    <Label Content="Username" Height="23" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Password" Height="23" HorizontalAlignment="Left" Margin="10,38,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Server Address" Height="23" HorizontalAlignment="Left" Margin="10,66,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Proxy Address" Height="23" HorizontalAlignment="Left" Margin="10,122,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Proxy Port" Height="23" HorizontalAlignment="Left" Margin="10,150,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Proxy Username" Height="23" HorizontalAlignment="Left" Margin="10,178,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Proxy Password" Height="23" HorizontalAlignment="Left" Margin="10,206,0,0" VerticalAlignment="Top" Width="136"/>
                    <TextBox x:Name="PreferencesUsernameTextBox" HorizontalAlignment="Left" Height="23" Margin="159,13,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="261"/>
                    <PasswordBox x:Name="PreferencesPasswordPasswordBox" HorizontalAlignment="Left" Height="23" Margin="159,41,0,0" VerticalAlignment="Top" Width="261"/>
                    <TextBox x:Name="PreferencesServerAddressTextBox" HorizontalAlignment="Left" Height="23" Margin="159,69,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="261"/>
                    <TextBox x:Name="PreferencesProxyServerAddressTextBox" HorizontalAlignment="Left" Height="23" Margin="159,125,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="261"/>
                    <TextBox x:Name="PreferencesProxyServerPortTextBox" HorizontalAlignment="Left" Height="23" Margin="159,153,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="261"/>
                    <TextBox x:Name="PreferencesProxyServerUsernameTextBox" HorizontalAlignment="Left" Height="23" Margin="159,181,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="261"/>
                    <PasswordBox x:Name="PreferencesProxyServerPasswordTextBox" HorizontalAlignment="Left" Height="23" Margin="159,209,0,0" VerticalAlignment="Top" Width="261"/>
                    <Button x:Name="PreferencesSaveButton" Content="Save" HorizontalAlignment="Right" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="75" Click="PreferencesSaveButtonClick"/>
                    <CheckBox x:Name="PreferencesUseProxyCheckbox" Content="Use Proxy" HorizontalAlignment="Left" Margin="159,101,0,0" VerticalAlignment="Top" Height="19" Width="91" UseLayoutRounding="True" ClickMode="Press" Checked="PreferencesUseProxyCheckboxChecked" Unchecked="PreferencesUseProxyCheckboxUnChecked"/>
                    <ComboBox x:Name="MaxSearchResultsComboBox" HorizontalAlignment="Left" Margin="159,237,0,0" VerticalAlignment="Top" Width="261"/>
                    <ComboBox x:Name="MaxBitrateComboBox" HorizontalAlignment="Left" Margin="159,268,0,0" VerticalAlignment="Top" Width="261"/>
                    <ComboBox x:Name="AlbumListMaxComboBox" HorizontalAlignment="Left" Margin="159,299,0,0" VerticalAlignment="Top" Width="261"/>
                    <Label Content="Max Search Results" HorizontalAlignment="Left" Margin="10,237,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Max Bitrate" HorizontalAlignment="Left" Margin="10,268,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Album List Max" HorizontalAlignment="Left" Margin="10,299,0,0" VerticalAlignment="Top" Width="136"/>
                    <Button x:Name="PreferencesCancelButton" Content="Cancel" HorizontalAlignment="Right" Margin="0,0,90,10" VerticalAlignment="Bottom" Width="75" Click="PreferencesCancelButtonClick"/>
                    <Label Content="Email:" HorizontalAlignment="Right" Margin="0,48,267,0" VerticalAlignment="Top" Width="40" Target="{Binding ElementName=PreferencesLicenseEmailLabel}"/>
                    <Label Content="Date:" HorizontalAlignment="Right" Margin="0,79,267,0" VerticalAlignment="Top" Width="40" Target="{Binding ElementName=PreferencesLicenseDateLabel}"/>
                    <Label Content="Key:" HorizontalAlignment="Right" Margin="0,110,267,0" VerticalAlignment="Top" Width="40" Target="{Binding ElementName=PreferencesLicenseKeyLabel}"/>
                    <Label Content="Valid:" HorizontalAlignment="Right" Margin="0,141,267,0" VerticalAlignment="Top" Width="40" Target="{Binding ElementName=PreferencesLicenseValidLabel}"/>
                    <Label x:Name="PreferencesLicenseEmailLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,48,0,0" VerticalAlignment="Top" Width="262" Height="24"/>
                    <Label x:Name="PreferencesLicenseDateLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,79,0,0" VerticalAlignment="Top" Width="262" Height="24"/>
                    <Label x:Name="PreferencesLicenseKeyLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,110,0,0" VerticalAlignment="Top" Width="262" Height="24"/>
                    <Label x:Name="PreferencesLicenseValidLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,141,0,0" VerticalAlignment="Top" Width="262" Height="24"/>
                    <Label Content="License Information" HorizontalAlignment="Right" Margin="0,17,167,0" VerticalAlignment="Top" Width="140" FontWeight="Bold"/>
                    <CheckBox x:Name="UseDiskCacheCheckBox" Content="Use Disk Cache" HorizontalAlignment="Left" Margin="159,332,0,0" VerticalAlignment="Top" Checked="UseDiskCacheCheckboxChecked" Unchecked="UseDiskCacheCheckboxUnChecked"/>
                    <Label Content="Cache Directory" HorizontalAlignment="Left" Margin="10,354,0,0" VerticalAlignment="Top" Width="136"/>
                    <Label Content="Now Playing Interval" HorizontalAlignment="Left" Margin="10,385,0,0" VerticalAlignment="Top" Width="136"/>
                    <ComboBox x:Name="NowPlayingIntervalComboBox" HorizontalAlignment="Left" Margin="159,385,0,0" VerticalAlignment="Top" Width="261"/>
                    <Label Content="Chat Messages Interval" HorizontalAlignment="Left" Margin="10,416,0,0" VerticalAlignment="Top" Width="136"/>
                    <ComboBox x:Name="ChatMessagesIntervalComboBox" HorizontalAlignment="Left" Margin="159,416,0,0" VerticalAlignment="Top" Width="261"/>
                    <TextBox x:Name="CacheDirectoryTextBox" HorizontalAlignment="Left" Height="23" Margin="159,357,0,0" VerticalAlignment="Top" Width="261"/>
                    <Label Content="Server Information" HorizontalAlignment="Right" Margin="0,181,113,0" VerticalAlignment="Top" Width="194" FontWeight="Bold"/>
                    <Label Content="REST API:" HorizontalAlignment="Right" Margin="0,212,242,0" VerticalAlignment="Top" Width="65"/>
                    <Label x:Name="ServerApiLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,212,90,0" VerticalAlignment="Top" Width="145"/>
                    <Label Content="User Information" HorizontalAlignment="Right" Margin="0,15,448,0" VerticalAlignment="Top" Width="113" FontWeight="Bold"/>
                    <Label Content="Email:" HorizontalAlignment="Right" Margin="0,48,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Scrobble:" HorizontalAlignment="Right" Margin="0,79,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Admin:" HorizontalAlignment="Right" Margin="0,110,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Settings:" HorizontalAlignment="Right" Margin="0,141,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Stream:" HorizontalAlignment="Right" Margin="0,172,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Jukebox:" HorizontalAlignment="Right" Margin="0,203,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Download:" HorizontalAlignment="Right" Margin="0,234,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Upload:" HorizontalAlignment="Right" Margin="0,265,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Playlist:" HorizontalAlignment="Right" Margin="0,296,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Cover Art:" HorizontalAlignment="Right" Margin="0,327,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Comment:" HorizontalAlignment="Right" Margin="0,358,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label Content="Podcast:" HorizontalAlignment="Right" Margin="0,389,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label x:Name="UserShareLabel2" Content="Share:" HorizontalAlignment="Right" Margin="0,420,483,0" VerticalAlignment="Top" Width="78"/>
                    <Label x:Name="UserEmailLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,48,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserScrobblingLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,79,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserAdminLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,110,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserSettingsLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,141,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserStreamLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,172,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserJukeboxLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,203,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserDownloadLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,234,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserUploadLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,265,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserPlaylistLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,296,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserCoverArtLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,327,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserCommentLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,358,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserPodcastLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,389,312,0" VerticalAlignment="Top" Width="166"/>
                    <Label x:Name="UserShareLabel" Content="N/A" HorizontalAlignment="Right" Margin="0,420,312,0" VerticalAlignment="Top" Width="166"/>
                    <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Right" Height="36" Margin="0,10,407,0" VerticalAlignment="Top" Width="36">
                        <Image x:Name="UserAvatarImage" AllowDrop="False" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>
        <Image x:Name="MusicCoverArt" Width="40" Height="40" Margin="10,0,0,61" AllowDrop="False" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="1" MouseLeftButtonUp="MusicCoverArtMouseLeftButtonUp" RenderTransformOrigin="0.689,0.343"/>
        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="1" Height="40" Margin="55,0,0,61" Width="175" MouseLeftButtonUp="StackPanelMouseLeftButtonUp">
            <TextBlock x:Name="MusicArtistLabel" Width="175" FontSize="10" FontWeight="Normal" Margin="0,0,0,0" Height="13" />
            <TextBlock x:Name="MusicTitleLabel" Width="175" FontSize="10" FontWeight="Medium" Margin="0,0,0,0" Height="13" />
            <TextBlock x:Name="MusicAlbumLabel" Width="175" FontSize="10" FontWeight="Bold" Margin="0,0,0,0" Height="13" />
        </StackPanel>
        <Button x:Name="PreviousButton" HorizontalAlignment="Left" Margin="10,0,0,61" VerticalAlignment="Bottom" Width="32" Height="32" Command="MediaCommands.PreviousTrack" ToolTip="Previous Title">
            <Image Source="Images/media-skip-backward.png"/>
        </Button>
        <Button x:Name="StopButton" HorizontalAlignment="Left" Margin="47,0,0,61" VerticalAlignment="Bottom" Width="32" Height="32" Command="MediaCommands.Stop" ToolTip="Stop">
            <Image Source="Images/media-playback-stop.png"/>
        </Button>
        <Button x:Name="PlayButton" HorizontalAlignment="Left" Margin="84,0,0,61" VerticalAlignment="Bottom" Width="45" Height="32" Command="MediaCommands.Play" ToolTip="Play">
            <Image Source="Images/media-playback-start.png"/>
        </Button>
        <Button x:Name="PauseButton" HorizontalAlignment="Left" Margin="134,0,0,61" VerticalAlignment="Bottom" Width="32" Height="32" Command="MediaCommands.Pause" ToolTip="Pause">
            <Image Source="Images/media-playback-pause.png"/>
        </Button>
        <Button x:Name="NextButton" HorizontalAlignment="Left" Margin="171,0,0,61" VerticalAlignment="Bottom" Width="32" Height="32" Command="MediaCommands.NextTrack" ToolTip="Next Title">
            <Image Source="Images/media-skip-forward.png"/>
        </Button>
        <Button x:Name="RepeatButton" HorizontalAlignment="Right" Margin="0,0,266,61" VerticalAlignment="Bottom" Width="32" Height="32" Click="RepeatButtonClick" ToolTip="Repeat: Disabled" Grid.Column="2">
            <Image x:Name="RepeatButtonIcon">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Source" Value="/Images/media-playlist-repeat-disabled.png"/>
                        <Style.Triggers>
                            <Trigger Property="Name" Value="RepeatEnabled">
                                <Setter Property="Source" Value="/Images/media-playlist-repeat-enabled.png"/>
                            </Trigger>
                            <Trigger Property="Name" Value="RepeatDisabled">
                                <Setter Property="Source" Value="/Images/media-playlist-repeat-disabled.png"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>
        <Button x:Name="ShuffleButton" HorizontalAlignment="Right" Margin="0,0,231,61" VerticalAlignment="Bottom" Width="32" Height="32" Click="ShuffleButtonClick" ToolTip="Shuffle Playlist" Grid.Column="2">
            <Image Source="Images/media-playlist-shuffle.png"/>
        </Button>
        <Button x:Name="MuteButton" HorizontalAlignment="Right" Margin="0,0,196,61" VerticalAlignment="Bottom" Height="32" Width="32" Click="MuteButtonClick" ToolTip="Mute Volume" Grid.Column="2">
            <Image x:Name="MuteButtonIcon">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Source" Value="/Images/audio-volume-zero-panel.png"/>
                        <Style.Triggers>
                            <Trigger Property="Name" Value="VolumeMuted">
                                <Setter Property="Source" Value="/Images/audio-volume-muted-panel.png"/>
                            </Trigger>
                            <Trigger Property="Name" Value="VolumeZero">
                                <Setter Property="Source" Value="/Images/audio-volume-zero-panel.png"/>
                            </Trigger>
                            <Trigger Property="Name" Value="VolumeLow">
                                <Setter Property="Source" Value="/Images/audio-volume-low-panel.png"/>
                            </Trigger>
                            <Trigger Property="Name" Value="VolumeMedium">
                                <Setter Property="Source" Value="/Images/audio-volume-medium-panel.png"/>
                            </Trigger>
                            <Trigger Property="Name" Value="VolumeHigh">
                                <Setter Property="Source" Value="/Images/audio-volume-high-panel.png"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>
        <Slider x:Name="VolumeSlider" Margin="0,0,10,61" VerticalAlignment="Bottom" ValueChanged="VolumeSliderValueChanged" HorizontalAlignment="Right" Width="181" Height="32" VerticalContentAlignment="Center" UseLayoutRounding="True" MinHeight="32" MaxHeight="32" Grid.Column="2"/>
        <Slider x:Name="ProgressSlider" Margin="10,0,10,34" VerticalAlignment="Bottom" PreviewMouseLeftButtonUp="ProgressSliderMouseLeftButtonUp" Height="22" Grid.ColumnSpan="3"/>
        <MediaElement x:Name="MediaPlayer" HorizontalAlignment="Left" Height="1" VerticalAlignment="Top" Width="1" Margin="0,0,0,0" Visibility="Hidden" MediaOpened="MediaPlayerMediaOpened" UnloadedBehavior="Manual" LoadedBehavior="Manual"/>
        <Button x:Name="NewPlaylistButton" Margin="0,0,340,61" VerticalAlignment="Bottom" Width="32" Height="32" Click="NewPlaylistButtonClick" ToolTip="New Playlist" HorizontalAlignment="Right" Grid.Column="1" Grid.ColumnSpan="2">
            <Image Source="Images/document-new.png"/>
        </Button>
        <Button x:Name="SavePlaylistButton" Margin="0,0,303,61" VerticalAlignment="Bottom" Width="32" Height="32" Click="SavePlaylistButtonClick" ToolTip="Save Playlist" HorizontalAlignment="Right" Grid.Column="2">
            <Image Source="Images/document-save.png"/>
        </Button>
        <Image Source="Images\stock_search.png" Margin="0,5,215,0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" Grid.Column="2"/>
        <TextBox x:Name="ArtistFilterTextBox" HorizontalAlignment="Right" Width="200" VerticalAlignment="Top" TextChanged="ArtistFilterTextBoxTextChanged" ToolTip="Artist Filter" Margin="0,5,240,0" Grid.Column="1" Grid.ColumnSpan="2" Height="18"/>
        <TextBox x:Name="GlobalSearchTextBox" HorizontalAlignment="Right" Width="200" VerticalAlignment="Top" KeyDown="GlobalSearchTextBoxKeyDown" ToolTip="Global Search" Margin="0,5,10,0" Grid.Column="2" Height="18"/>
    </Grid>
</Window>
